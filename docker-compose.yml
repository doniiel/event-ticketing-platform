services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql-init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysql", "-h", "localhost", "-u", "root", "-ppassword", "-e", "SELECT 1"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 60s

  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/init.js
    healthcheck:
      test: ["CMD", "mongosh", "-u", "root", "-p", "password", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 60s

  loki:
    image: grafana/loki:2.8.2
    ports:
      - "3100:3100"

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  promtail:
    image: grafana/promtail:2.8.2
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /etc/machine-id:/etc/machine-id:ro
      - ./promtail-config.yaml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml

  tempo:
    image: grafana/tempo:latest
    ports:
      - "4318:4318"

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources



  event-service:
    build:
      context: .
      dockerfile: event-service/Dockerfile
    container_name: event-service
    ports:
      - "50051:50051"
      - "8081:8081"
    environment:
      - GRPC_PORT=50051
      - HTTP_PORT=8081
      - DATABASE_URL=root:password@tcp(mysql:3306)/events?parseTime=true
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 60s

  ticket-service:
    build:
      context: .
      dockerfile: ticket-service/Dockerfile
    container_name: ticket-service
    ports:
      - "50052:50052"
      - "8082:8082"
    environment:
      - GRPC_PORT=50052
      - HTTP_PORT=8082
      - MONGO_URI=mongodb://root:password@mongodb:27017
      - DATABASE_NAME=tickets
      - EVENT_SERVICE_ADDR=event-service:50051
      - NOTIFICATION_SERVICE_ADDR=notification-service:50053
    depends_on:
      mongodb:
        condition: service_healthy
      event-service:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 60s

  notification-service:
    build:
      context: .
      dockerfile: notification-service/Dockerfile
    container_name: notification-service
    ports:
      - "50053:50053"
      - "8083:8083"
    environment:
      - GRPC_PORT=50053
      - HTTP_PORT=8083
      - DATABASE_URL=root:password@tcp(mysql:3306)/notifications?parseTime=true
      - TICKET_SERVICE_ADDR=ticket-service:50052
    depends_on:
      mysql:
        condition: service_healthy
      ticket-service:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 60s

volumes:
  mysql-data:
  mongo-data: